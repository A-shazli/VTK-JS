{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","head","chest","rootContainer","document","querySelector","containerStyle","height","fullScreenRenderer","vtkFullScreenRenderWindow","newInstance","background","renderer","getRenderer","renderWindow","getRenderWindow","apiRenderWindow","getApiSpecificRenderWindow","getInteractor","setDesiredUpdateRate","body","widgetContainer","createElement","label","innerHTML","style","visibility","position","top","left","color","appendChild","labelContainer","width","textAlign","userSelect","cursor","presetIndex","globalDataRange","lookupTable","vtkColorTransferFunction","changePreset","delta","arguments","length","undefined","vtkColorMaps","rgbPresetNames","applyColorMap","getPresetByName","setMappingRange","apply","updateRange","intervalID","stopInterval","clearInterval","addEventListener","event","pageX","overlaySize","overlayBorder","overlay","concat","border","borderRadius","pointerEvents","widgetManager","vtkWidgetManager","setRenderer","widget","vtkImageCroppingWidget","widget_2","vtkPiecewiseGaussianWidget","numberOfBins","size","updateStyle","backgroundColor","histogramColor","strokeColor","activeColor","handleColor","buttonDisableFillColor","buttonDisableStrokeColor","buttonStrokeColor","buttonFillColor","strokeWidth","activeStrokeWidth","buttonStrokeWidth","handleWidth","iconSize","padding","setResizeCallback","_ref","setSize","Math","min","piecewiseFunction","vtkPiecewiseFunction","reader","vtkHttpDataSetReader","fetchGzip","actor","vtkVolume","mapper","vtkVolumeMapper","calculations","image","getOutputData","dataArray","getPointData","getScalars","dataRange","getRange","setDataArray","getData","applyOpacity","setColorTransferFunction","onModified","render","cropState","getWidgetState","getCroppingPlanes","planes","imageData","ijkPlanes","rotation","quat","create","mat4","getRotation","getIndexToWorld","rotateVec","vec","out","vec3","transformQuat","_ijkPlanes","Object","slicedToArray","iMin","iMax","jMin","jMax","kMin","kMax","origin","indexToWorld","corner","vtkPlane","normal","getPlanes","removeAllClippingPlanes","forEach","plane","addClippingPlane","modified","copyImageDataDescription","firstIsoValue","el","setAttribute","value","max","updateIsoValue","marchingCube","setContourValue","updateBlendMode","updateScalarMin","updateScalarMax","setSampleDistance","setMapper","getActiveCamera","set","viewUp","setInputConnection","getOutputPort","setUrl","loadData","then","isParallel","updateFlag","e","target","checked","name","currentTarget","dataset","defineProperty","enablePicking","elems","querySelectorAll","i","blendMode","parseInt","ipScalarEls","setBlendMode","setIpScalarRange","display","getIpScalarRange","getProperty","setRGBTransferFunction","setScalarOpacity","setInterpolationTypeToFastLinear","addGaussian","setContainer","bindMouseListeners","onAnimation","start","requestAnimation","cancelAnimation","onOpacityChange","isAnimating","mapper_2","vtkMapper","actor_2","vtkActor","vtkImageMarchingCubes","contourValue","computeNormals","mergePoints","console","log","isoValue","Number","this","react_default","a","className","zIndex","id","onClick","type","part","options","selectedIndex","removeWidget","removeAllActors","removeAllVolumes","resetCamera","resetCameraClippingRange","button","setParallelProjection","innerText","controlPanel","blendpanel","setVisibility","addActor","isopanel","addVolume","action","viewWidget","setDisplayCallback","coords","_apiRenderWindow$getS","getSize","_apiRenderWindow$getS2","w","h","round","window","innerWidth","innerHeight","widgetRegistration","data-name","defaultChecked","step","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.86d534f8.chunk.js","sourcesContent":["// Force DataAccessHelper to have access to various data source\nimport '@kitware/vtk.js/IO/Core/DataAccessHelper/HtmlDataAccessHelper';\nimport '@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper';\nimport '@kitware/vtk.js/IO/Core/DataAccessHelper/JSZipDataAccessHelper';\nimport React from 'react'\nimport { vec3, quat, mat4 } from 'gl-matrix';\n\nimport '@kitware/vtk.js/Rendering/Profiles/Geometry';\nimport '@kitware/vtk.js/Rendering/Profiles/Volume';\nimport '@kitware/vtk.js/Rendering/Profiles/Glyph';\n\nimport vtkImageMarchingCubes from '@kitware//vtk.js/Filters/General/ImageMarchingCubes';\nimport vtkFullScreenRenderWindow from '@kitware/vtk.js/Rendering/Misc/FullScreenRenderWindow';\nimport vtkWidgetManager from '@kitware/vtk.js/Widgets/Core/WidgetManager';\nimport vtkHttpDataSetReader from '@kitware/vtk.js/IO/Core/HttpDataSetReader';\nimport vtkImageCroppingWidget from '@kitware/vtk.js/Widgets/Widgets3D/ImageCroppingWidget';\nimport vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport vtkPiecewiseFunction from '@kitware/vtk.js/Common/DataModel/PiecewiseFunction';\nimport vtkVolume from '@kitware/vtk.js/Rendering/Core/Volume';\nimport vtkVolumeMapper from '@kitware/vtk.js/Rendering/Core/VolumeMapper';\nimport vtkPlane from '@kitware/vtk.js/Common/DataModel/Plane';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\n\nimport '@kitware/vtk.js/IO/Core/DataAccessHelper/HttpDataAccessHelper';\nimport vtkPiecewiseGaussianWidget from '@kitware/vtk.js/Interaction/Widgets/PiecewiseGaussianWidget';\nimport vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\n\n\n\n\n\nfunction App() {\n\n    const head = 'https://kitware.github.io/vtk-js/data/volume/headsq.vti'\n    const chest = 'https://kitware.github.io/vtk-js/data/volume/LIDC2.vti'\n    const rootContainer = document.querySelector(\n        '.vtk-js-example-piecewise-gaussian-widget'\n    );\n    const containerStyle = rootContainer ? { height: '100%' } : null;\n\n    const fullScreenRenderer = vtkFullScreenRenderWindow.newInstance({\n        rootContainer,\n        containerStyle,\n        background: [0, 0, 0, 0],\n    });\n    const renderer = fullScreenRenderer.getRenderer();\n    const renderWindow = fullScreenRenderer.getRenderWindow();\n    const apiRenderWindow = fullScreenRenderer.getApiSpecificRenderWindow();\n    renderWindow.getInteractor().setDesiredUpdateRate(15.0);\n    \n    const body = rootContainer || document.querySelector('body');\n\n    ///////////////////////////////////////////\n    /////////slicer and colortransfer////////\n    /////////////////////////////////////////\n\n    // Create Widget container\n    const widgetContainer = document.createElement('div');\n    const label = document.createElement('p');\n    label.innerHTML = 'Double click to add a gaussian, right click to remove'\n    widgetContainer.style.visibility = 'hidden';\n    widgetContainer.style.position = 'absolute';\n    widgetContainer.style.top = 'calc(510px + 1em)';\n    widgetContainer.style.left = '1070px';\n    widgetContainer.style.background = 'rgba(255, 255, 255, 0.3)';\n    label.style.color = 'white';\n    body.appendChild(widgetContainer);\n    widgetContainer.appendChild(label);\n\n    // Create Label for preset\n    const labelContainer = document.createElement('div');\n    labelContainer.style.position = 'absolute';\n    labelContainer.style.visibility = 'hidden';\n    labelContainer.style.top = '5px';\n    labelContainer.style.left = '5px';\n    labelContainer.style.width = '100%';\n    labelContainer.style.color = 'white';\n    labelContainer.style.textAlign = 'center';\n    labelContainer.style.userSelect = 'none';\n    labelContainer.style.cursor = 'pointer';\n    body.appendChild(labelContainer);\n\n    let presetIndex = 30;\n    const globalDataRange = [0, 255];\n    const lookupTable = vtkColorTransferFunction.newInstance();\n\n    function changePreset(delta = 1) {\n        presetIndex =\n            (presetIndex + delta + vtkColorMaps.rgbPresetNames.length) %\n            vtkColorMaps.rgbPresetNames.length;\n        lookupTable.applyColorMap(\n            vtkColorMaps.getPresetByName(vtkColorMaps.rgbPresetNames[presetIndex])\n        );\n        lookupTable.setMappingRange(...globalDataRange);\n        lookupTable.updateRange();\n        labelContainer.innerHTML = vtkColorMaps.rgbPresetNames[presetIndex];\n    }\n\n    let intervalID = null;\n    function stopInterval() {\n        if (intervalID !== null) {\n            clearInterval(intervalID);\n            intervalID = null;\n        }\n    }\n\n    labelContainer.addEventListener('click', (event) => {\n        if (event.pageX < 200) {\n            stopInterval();\n            changePreset(-1);\n        } else {\n            stopInterval();\n            changePreset(1);\n        }\n    });\n\n    // ----------------------------------------------------------------------------\n    // 2D overlay rendering\n    // ----------------------------------------------------------------------------\n\n    const overlaySize = 15;\n    const overlayBorder = 2;\n    const overlay = document.createElement('div');\n    overlay.style.position = 'absolute';\n    overlay.style.width = `${overlaySize}px`;\n    overlay.style.height = `${overlaySize}px`;\n    overlay.style.border = `solid ${overlayBorder}px white`;\n    overlay.style.borderRadius = '50%';\n    overlay.style.left = '-100px';\n    overlay.style.pointerEvents = 'none';\n    document.querySelector('body').appendChild(overlay);\n\n    // ----------------------------------------------------------------------------\n    // Widget manager\n    // ----------------------------------------------------------------------------\n\n    const widgetManager = vtkWidgetManager.newInstance();\n    widgetManager.setRenderer(renderer);\n\n    const widget = vtkImageCroppingWidget.newInstance();\n\n    function widgetRegistration(e) {\n        const action = e ? e.currentTarget.dataset.action : 'addWidget';\n        const viewWidget = widgetManager[action](widget);\n        if (viewWidget) {\n            viewWidget.setDisplayCallback((coords) => {\n                overlay.style.left = '-100px';\n                if (coords) {\n                    const [w, h] = apiRenderWindow.getSize();\n                    overlay.style.left = `${Math.round(\n                        (coords[0][0] / w) * window.innerWidth -\n                        overlaySize * 0.5 -\n                        overlayBorder\n                    )}px`;\n                    overlay.style.top = `${Math.round(\n                        ((h - coords[0][1]) / h) * window.innerHeight -\n                        overlaySize * 0.5 -\n                        overlayBorder\n                    )}px`;\n                }\n            });\n\n            renderer.resetCamera();\n            renderer.resetCameraClippingRange();\n        }\n        widgetManager.enablePicking();\n        renderWindow.render();\n    }\n\n\n\n    const widget_2 = vtkPiecewiseGaussianWidget.newInstance({\n        numberOfBins: 256,\n        size: [400, 150],\n    });\n    widget_2.updateStyle({\n        backgroundColor: 'rgba(255, 255, 255, 0.6)',\n        histogramColor: 'rgba(100, 100, 100, 0.5)',\n        strokeColor: 'rgb(0, 0, 0)',\n        activeColor: 'rgb(255, 255, 255)',\n        handleColor: 'rgb(50, 150, 50)',\n        buttonDisableFillColor: 'rgba(255, 255, 255, 0.5)',\n        buttonDisableStrokeColor: 'rgba(0, 0, 0, 0.5)',\n        buttonStrokeColor: 'rgba(0, 0, 0, 1)',\n        buttonFillColor: 'rgba(255, 255, 255, 1)',\n        strokeWidth: 2,\n        activeStrokeWidth: 3,\n        buttonStrokeWidth: 1.5,\n        handleWidth: 3,\n        iconSize: 0, // Can be 0 if you want to remove buttons (dblClick for (+) / rightClick for (-))\n        padding: 10,\n    });\n\n    fullScreenRenderer.setResizeCallback(({ width, height }) => {\n        widget_2.setSize(Math.min(450, width - 10), 150);\n    });\n\n    const piecewiseFunction = vtkPiecewiseFunction.newInstance();\n\n    const reader = vtkHttpDataSetReader.newInstance({ fetchGzip: true });\n\n    const actor = vtkVolume.newInstance();\n    const mapper = vtkVolumeMapper.newInstance();\n    mapper.setSampleDistance(1.1);\n    actor.setMapper(mapper);\n\n    renderer.getActiveCamera().set({ position: [0, 1, 0], viewUp: [0, 0, -1] });\n\n\n    mapper.setInputConnection(reader.getOutputPort());\n\n\n\n    function getCroppingPlanes(imageData, ijkPlanes) {\n        const rotation = quat.create();\n        mat4.getRotation(rotation, imageData.getIndexToWorld());\n\n        const rotateVec = (vec) => {\n            const out = [0, 0, 0];\n            vec3.transformQuat(out, vec, rotation);\n            return out;\n        };\n\n        const [iMin, iMax, jMin, jMax, kMin, kMax] = ijkPlanes;\n        const origin = imageData.indexToWorld([iMin, jMin, kMin]);\n        // opposite corner from origin\n        const corner = imageData.indexToWorld([iMax, jMax, kMax]);\n        return [\n            // X min/max\n            vtkPlane.newInstance({ normal: rotateVec([1, 0, 0]), origin }),\n            vtkPlane.newInstance({ normal: rotateVec([-1, 0, 0]), origin: corner }),\n            // Y min/max\n            vtkPlane.newInstance({ normal: rotateVec([0, 1, 0]), origin }),\n            vtkPlane.newInstance({ normal: rotateVec([0, -1, 0]), origin: corner }),\n            // X min/max\n            vtkPlane.newInstance({ normal: rotateVec([0, 0, 1]), origin }),\n            vtkPlane.newInstance({ normal: rotateVec([0, 0, -1]), origin: corner }),\n        ];\n    }\n\n\n    ///////////////////////////////////\n    /////////preload default//////////\n    /////////////////////////////////\n    reader.setUrl(head, { loadData: true }).then(() => {\n        calculations();\n\n    });\n\n\n    function calculations() {\n        const image = reader.getOutputData();\n        const dataArray = image.getPointData().getScalars();\n        const dataRange = dataArray.getRange();\n        globalDataRange[0] = dataRange[0];\n        globalDataRange[1] = dataRange[1];\n\n        // Update Lookup table\n        changePreset();\n\n\n        widget_2.setDataArray(dataArray.getData());\n        widget_2.applyOpacity(piecewiseFunction);\n\n        widget_2.setColorTransferFunction(lookupTable);\n        lookupTable.onModified(() => {\n            widget_2.render();\n            renderWindow.render();\n        });\n\n        // update crop widget\n        \n        const cropState = widget.getWidgetState().getCroppingPlanes();\n\n        cropState.onModified(() => {\n            const planes = getCroppingPlanes(image, cropState.getPlanes());\n            mapper.removeAllClippingPlanes();\n            planes.forEach((plane) => {\n                mapper.addClippingPlane(plane);\n                renderWindow.render();\n            });\n            mapper.modified();\n        });\n\n        widget.copyImageDataDescription(image); //the update\n        const firstIsoValue = (dataRange[0] + dataRange[1]) / 6;\n\n   \n\n        const el = document.querySelector('.isoValue');\n        el.setAttribute('min', dataRange[0]);\n        el.setAttribute('max', dataRange[1]);\n        el.setAttribute('value', firstIsoValue);\n        const value = (el.value - el.min) / (el.max - el.min) * 100\n        el.style.background = 'linear-gradient(to right, #74525b 0%, #74525b ' + value + '%, #e7dee0 ' + value + '%, #e7dee0 100%)'\n        el.addEventListener('input', updateIsoValue);\n        marchingCube.setContourValue(firstIsoValue);\n\n        const el1 = document.querySelector('.blendMode');\n        el1.addEventListener('change', updateBlendMode);\n        const scalarMinEl = document.querySelector('.scalarMin');\n        scalarMinEl.addEventListener('input', updateScalarMin);\n        const scalarMaxEl = document.querySelector('.scalarMax');\n        scalarMaxEl.addEventListener('input', updateScalarMax);\n\n    }\n    \n    /////////////////////////////////\n    ///////toggle projection/////////  \n    /////////////////////////////////\n\n\n    let isParallel = false;\n\n    function toggleParallel() {\n        const button = document.querySelector('.text');\n        isParallel = !isParallel;\n        const camera = renderer.getActiveCamera();\n        camera.setParallelProjection(isParallel);\n\n        renderer.resetCamera();\n\n        button.innerText = `(${isParallel ? 'on' : 'off'})`;\n\n        renderWindow.render();\n    }\n\n\n\n    /////////////////////////////////\n    //////////switch data///////////  \n    ///////////////////////////////\n\n    function switch_data() {\n\n        const type = document.querySelector('#dropdown');\n        const part = type.options[type.selectedIndex].value;\n        console.log(part)\n        if (part === 'Head') {\n            reader.setUrl(head, { loadData: true }).then(() => {\n                calculations();\n\n            });\n        }\n        if (part === 'Chest') {\n            reader.setUrl(chest, { loadData: true }).then(() => {\n                calculations();\n\n            });\n        }\n\n        \n\n\n        mapper.removeAllClippingPlanes();\n        widgetManager.removeWidget(widget);\n        renderer.removeAllActors();\n        renderer.removeAllVolumes();\n        renderer.resetCamera();\n        widgetManager.enablePicking();\n        renderer.resetCameraClippingRange();\n        renderWindow.render();\n\n    }\n\n\n\n\n\n    function updateFlag(e) {\n        const value = !!e.target.checked;\n        const name = e.currentTarget.dataset.name;\n        widget.set({ [name]: value }); // can be called on either viewWidget or parentWidget\n\n        widgetManager.enablePicking();\n        renderWindow.render();\n    }\n\n    const elems = document.querySelectorAll('.flag');\n    for (let i = 0; i < elems.length; i++) {\n        elems[i].addEventListener('change', updateFlag);\n    }\n\n\n    ////////////////////////////\n    /////////bendmode//////////\n    //////////////////////////\n\n    function updateBlendMode(event) {\n        const blendMode = parseInt(event.target.value, 10);\n        const ipScalarEls = document.querySelectorAll('.ipScalar');\n      \n        mapper.setBlendMode(blendMode);\n        mapper.setIpScalarRange(0.0, 1.0);\n      \n        // if average or additive blend mode\n        if (blendMode === 3 || blendMode === 4) {\n          // Show scalar ui\n          for (let i = 0; i < ipScalarEls.length; i += 1) {\n            const el = ipScalarEls[i];\n            el.style.display = 'table-row';\n          }\n        } else {\n          // Hide scalar ui\n          for (let i = 0; i < ipScalarEls.length; i += 1) {\n            const el = ipScalarEls[i];\n            el.style.display = 'none';\n          }\n        }\n      \n        renderWindow.render();\n      }\n      \n      function updateScalarMin(event) {\n        mapper.setIpScalarRange(event.target.value, mapper.getIpScalarRange()[1]);\n        renderWindow.render();\n      }\n      \n      function updateScalarMax(event) {\n        mapper.setIpScalarRange(mapper.getIpScalarRange()[0], event.target.value);\n        renderWindow.render();\n      }\n      \n\n    /////////////////////////////////\n    //////////crop widget///////////  \n    ///////////////////////////////\n\n    function slicer() {\n        const controlPanel = document.querySelector('.controlPanel')\n        const isopanel = document.querySelector('.isopanel')\n        const blendpanel = document.querySelector('.blendmode')\n        controlPanel.style.display = 'block'\n        blendpanel.style.display = 'block'\n        isopanel.style.display = 'none'\n        renderWindow.render();\n        labelContainer.style.visibility = 'visible';\n        widgetContainer.style.visibility = 'visible';\n        document.querySelector('.typing-demo').style.display = 'none'\n\n        // add volume to renderer\n\n        actor_2.setVisibility(false)\n        renderer.addVolume(actor);\n        actor.setVisibility(true)\n        renderer.resetCameraClippingRange();\n        renderer.resetCamera();\n\n        widgetRegistration();\n        renderWindow.render();\n    }\n\n\n    actor.getProperty().setRGBTransferFunction(0, lookupTable);\n    actor.getProperty().setScalarOpacity(0, piecewiseFunction);\n    actor.getProperty().setInterpolationTypeToFastLinear();\n\n    widget_2.addGaussian(0.425, 0.5, 0.2, 0.3, 0.2);\n    widget_2.addGaussian(0.75, 1, 0.3, 0, 0);\n\n    widget_2.setContainer(widgetContainer);\n    widget_2.bindMouseListeners();\n\n    widget_2.onAnimation((start) => {\n        if (start) {\n            renderWindow.getInteractor().requestAnimation(widget_2);\n        } else {\n            renderWindow.getInteractor().cancelAnimation(widget_2);\n        }\n    });\n\n    widget_2.onOpacityChange(() => {\n        widget_2.applyOpacity(piecewiseFunction);\n        if (!renderWindow.getInteractor().isAnimating()) {\n            renderWindow.render();\n        }\n    });\n\n\n\n    //////////////////////////////////////////\n    /////////////marching cubes//////////////\n    ////////////////////////////////////////\n\n\n    //since other actor is a volumeactor\n    const mapper_2 = vtkMapper.newInstance();\n    const actor_2 = vtkActor.newInstance();\n    actor_2.setMapper(mapper_2);\n\n    const marchingCube = vtkImageMarchingCubes.newInstance({\n        contourValue: 0.0,\n        computeNormals: true,\n        mergePoints: true,\n    });\n\n    mapper_2.setInputConnection(marchingCube.getOutputPort());\n\n    function updateIsoValue(e) {\n        console.log(\"hereS\")\n        const isoValue = Number(e.target.value);\n        const value = (this.value - this.min) / (this.max - this.min) * 100\n        this.style.background = 'linear-gradient(to right, #74525b 0%, #74525b ' + value + '%, #e7dee0 ' + value + '%, #e7dee0 100%)'\n        marchingCube.setContourValue(isoValue);\n        renderWindow.render();\n    }\n\n    marchingCube.setInputConnection(reader.getOutputPort());\n\n\n    function marching_c() {\n        const controlPanel = document.querySelector('.controlPanel')\n        const blendpanel = document.querySelector('.blendmode')\n        controlPanel.style.display = 'none'\n        blendpanel.style.display = 'none'\n        const isopanel = document.querySelector('.isopanel')\n        isopanel.style.display = 'block'\n        widgetContainer.style.visibility = 'hidden';\n        labelContainer.style.visibility = 'hidden';\n        document.querySelector('.typing-demo').style.display = 'none'\n\n        widgetManager.removeWidget(widget);\n        actor.setVisibility(false)\n        renderer.addActor(actor_2);\n        actor_2.setVisibility(true)\n        renderer.resetCamera();\n        renderWindow.render();\n    }\n\n    return (\n        \n\n        <div className='body' style={{\n            zIndex: \"2\", //so the gui wont cover the sliders up\n            position: \"absolute\"\n\n        }}>\n            <p className='typing-demo'>choose a view mode....</p>\n\n            <div className='panel'>\n                <p className='title'>MedScape</p>\n                <label className='data'>Pick a dataset: </label>\n                <select id=\"dropdown\" onClick={switch_data} >\n                    <option value=\"Head\">Head</option>\n                    <option value=\"Chest\">Chest</option>\n                </select>\n                <p>Projection mode: </p>\n                <button className='btn' onClick={toggleParallel}>\n                    <span>Parallel projection:</span><i className=\"text\">(off)</i></button>\n                <div className='isopanel' style={{ display: 'none' }}>\n                    <p className='iso'>Iso value: </p>\n                    <input\n                        className='isoValue'\n                        type=\"range\"\n                    />\n                </div>\n                <p>View modes: </p>\n                <button className='btn' onClick={marching_c}><span>Marching cubes</span></button>\n                <button className='btn ' onClick={slicer}><span>Crop widget</span></button>\n                <div className='controlPanel' style={{ display: 'none' }}>\n                    <p>Presets: </p>\n                    <table className='cpanel' >\n                        <tbody>\n                            <tr>\n                                <td>Pickable</td>\n                                <td>\n                                    <input className='flag' data-name=\"pickable\" type=\"checkbox\" onClick={updateFlag} defaultChecked='checked' />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>Visibility</td>\n                                <td>\n                                    <input className='flag' data-name=\"visibility\" type=\"checkbox\" onClick={updateFlag} defaultChecked='checked' />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>ContextVisibility</td>\n                                <td>\n                                    <input className='flag' data-name=\"contextVisibility\" type=\"checkbox\" onClick={updateFlag} defaultChecked='checked' />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>HandleVisibility</td>\n                                <td>\n                                    <input className='flag' data-name=\"handleVisibility\" type=\"checkbox\" onClick={updateFlag} defaultChecked='checked' />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>FaceHandlesEnabled</td>\n                                <td>\n                                    <input className='flag' data-name=\"faceHandlesEnabled\" type=\"checkbox\" onClick={updateFlag} defaultChecked='checked' />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>EdgeHandlesEnabled</td>\n                                <td>\n                                    <input className='flag' data-name=\"edgeHandlesEnabled\" type=\"checkbox\" onClick={updateFlag} defaultChecked='checked' />\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>CornerHandlesEnabled</td>\n                                <td>\n                                    <input className='flag' data-name=\"cornerHandlesEnabled\" type=\"checkbox\" onClick={updateFlag} defaultChecked='checked' />\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                </div>\n\n                \n\n            </div>\n            \n\n            <table className='blendmode'>\n                <tbody>\n                    <tr>\n                        <td>Blend Mode</td>\n                        <td>\n                            <select className=\"blendMode\">\n                                <option value=\"0\">Composite</option>\n                                <option value=\"1\">Maximum Intensity</option>\n                                <option value=\"2\">Minimum Intensity</option>\n                                <option value=\"3\">Average Intensity</option>\n                                <option value=\"4\">Additive Intensity</option>\n                            </select>\n                        </td>\n                    </tr> \n                    <tr className=\"ipScalar\" style={{ display: \"none\" }}>\n                        <td>IP Scalar Min</td>\n                        <td><input className=\"scalarMin\" type=\"range\" min=\"0\" max=\"1\"  step=\"0.01\" /></td>\n                    </tr>\n                    <tr className=\"ipScalar\" style={{ display: \"none\" }}>\n                        <td>IP Scalar Max</td>\n                        <td><input className=\"scalarMax\" type=\"range\" min=\"0\" max=\"1\"  step=\"0.01\" /></td>\n                    </tr>\n                </tbody>\n            </table>\n\n\n        </div>\n\n\n\n    );\n\n}\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}